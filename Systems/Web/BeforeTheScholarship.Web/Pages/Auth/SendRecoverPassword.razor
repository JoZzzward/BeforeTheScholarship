@page "/send-recover-password"

@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

@using BeforeTheScholarship.Web.Pages.Auth.Models
d
<PageTitle>Recover password</PageTitle>

<MudContainer Class="d-flex justify-content-center" Style="height: 75vh;">
    <MudCard Class="p-4 my-auto mx-auto justify-content-center" Style="border-radius: 15px; width: 400px">

        <ErrorListPreview Errors="Errors" ShowErrors=_showErrors></ErrorListPreview>

        <MudText Class="m-2 p-2 text-center"
                 Typo="Typo.h5">
            Enter your email
        </MudText>
            
        <MudDivider/>

        <MudTextField Label="Email"
                      Class="m-2 p-2"
                      @bind-Value="@sendPasswordRecoveryRequest.Email" />
        <MudItem Class="d-flex align-content-center justify-content-center">
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Size="Size.Medium"
                       @onclick="SendPasswordRecoveryMessage">
                CONFIRM
            </MudButton>
        </MudItem>
    </MudCard>
</MudContainer>

@code {
    private SendPasswordRecoveryRequest sendPasswordRecoveryRequest = new();

    private PasswordRecoveryMailRequestValidator passwordRecoveryMailRequestValidator = new();

    private List<string>? Errors = new();
    private bool _showErrors;

    private async Task SendPasswordRecoveryMessage()
    {
        var validatorResult = await passwordRecoveryMailRequestValidator.ValidateAsync(sendPasswordRecoveryRequest);

        if (!validatorResult.IsValid)
        {
            Errors = validatorResult.Errors.Select(x => x.ErrorMessage).ToList();
            _showErrors = true;
            Snackbar.Add("Email is incorrect", Severity.Error);

            return;
        }

        Errors = null;
        _showErrors = false;

        var response = await AuthService.SendRecoverPasswordMail(sendPasswordRecoveryRequest);

        if (response is not null)
        {
            Snackbar.Add("Email was successfully sended", Severity.Success);

            NavigationManager.NavigateTo("/login");
        }

    }
}
