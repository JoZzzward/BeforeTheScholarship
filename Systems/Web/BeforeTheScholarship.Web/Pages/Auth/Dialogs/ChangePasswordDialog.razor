@using BeforeTheScholarship.Web.Pages.Auth.Models

<MudDialog>
    <DialogContent>
        <MudForm Model="@changePasswordRequest" @ref="form" Validation="@(_changePasswordRequestValidator.ValidateValue)">
            <MudGrid>
                <MudItem xs="12" Class="d-flex">
                    <MudTextField Label="Current password"
                                  Class="me-2"
                                  @bind-Value="changePasswordRequest.CurrentPassword"
                                  For="@(() => changePasswordRequest.CurrentPassword)"
                                  Required="true"
                                  RequiredError="Sum is required!">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12" Class="d-flex px-3">
                    <MudTextField Label="New password" @bind-Value="changePasswordRequest.NewPassword"
                                  For="@(() => changePasswordRequest.NewPassword)">
                    </MudTextField>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton @onclick="(Cancel)">Cancel</MudButton>
        <MudButton Color="Color.Primary" @onclick="(Submit)">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    private MudForm? form;

    public ChangePasswordRequest changePasswordRequest = new();
    private readonly ChangePasswordRequestValidator _changePasswordRequestValidator = new();

    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
            MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}
