@page "/confirm-email"

@inject ISnackbar Snackbar

@using BeforeTheScholarship.Web.Extensions;
@using Microsoft.AspNetCore.WebUtilities;
@using BeforeTheScholarship.Web.Pages.Auth.Models

@attribute [Authorize]

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@code {

    private readonly ConfirmationEmailRequestValidator _confirmationEmailRequestValidator = new();

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        QueryHelpers.ParseQuery(uri.Query).TryGetValue("email", out var email);

        QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token);

        var model = new ConfirmationEmailRequest
            {
                Email = email.ToString(),
                Token = token.ToString().Replace(' ', '+')
            };

        var validationResult = await _confirmationEmailRequestValidator.ValidateAsync(model);

        if (!validationResult.IsValid)
        {
            Snackbar.Add($"Email was not confirmed! Error: {validationResult.Errors.Select(x => x.ErrorMessage)}", Severity.Error);
            return;
        }

        await AuthService.ConfirmEmail(model);
        
        Snackbar.Add("Email was confirmed!", Severity.Success);

        NavigationManager.NavigateTo("/profile");
    }
}
